Content
=======

Depends
Problems
Workers

Depends
=======

Erlang/OTP R13B3
rabbitmq-erlang-client 2.3.1+hg20110303.1-0ubuntu2
mochiweb 2.0.0 (mochijson2.erl)

Problems
========

- how do we cope with the rabbit client and it's headers? Build process that
  looks great in Unix makes developer to bump ugly in Windows.
  Currently the client is an unzipped copy of the distro's package
  (rabbitmq-erlang-client, 2.3.1+hg20110303.1-0ubuntu2)
  Possible solutions:
  - let it be. Build beam files on linux, use them everywhere. The only parts
    to be changed are start/stop scripts, configs(?), etc.

- how to restart workers? By supervisor ('permanent' policy) or by handler
  ('temporary' policy).
  - permanent:
    in case of supervisor restarted workers handler must somehow know about
    its workers (to assign jobs to them, to terminate on duration).
    Either via gproc like registry or worker must report its pid (or ref, etc)
    to handler.
  - temporary:
    all the workers are started by handler and it knows about every worker.
    In case of worker's crash there is no immediate restart. So it can be
    necessary to set required values to min_workers in config.

Workers
=======

There are two types of workers: long living and short living processes.
The min and the max number of long lasting workers are defined in config file
in the handler section (parameters min_workers, max_workers).
The max number of short living processes is also defined in handler section
of the config (parameter max_children)
Long living workers are controlled (spawn, assign a job, terminate)
by ejobman_handler.

